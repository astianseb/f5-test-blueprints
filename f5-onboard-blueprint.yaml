tosca_definitions_version: cloudify_dsl_1_3

imports:
  - http://www.getcloudify.org/spec/cloudify/4.0.1/types.yaml
  - https://raw.githubusercontent.com/cloudify-cosmo/cloudify-openstack-plugin/2.2.0/plugin.yaml
  - https://raw.githubusercontent.com/cloudify-incubator/cloudify-utilities-plugin/1.3.0/plugin.yaml

inputs:

  onboard_yaml:
    type: string
    default: |
      #cloud-config
      ##############################################
      ###     EXAMPLE BIG-IP CLOUD-CONFIG        ###
      ##############################################
      write_files:

      - path: /config/cloud/onboard.sh
        permissions: 0755
        owner: root:root
        content: |
          #!/bin/bash

          # Load Input Parameters
          . /config/cloud/onboard_config_vars

          # Download Onboarding Libs.
          # Could be pre-packaged or hosted internally
          curl -o /config/cloud/f5-cloud-libs.tar.gz --silent --fail --retry 20 -L https://api.github.com/repos/F5Networks/f5-cloud-libs/tarball/develop
          tar xvzf /config/cloud/f5-cloud-libs.tar.gz -C /config/cloud/
          mv /config/cloud/F5Networks-f5-cloud-libs-* /config/cloud/f5-cloud-libs
          cd /config/cloud/f5-cloud-libs
          npm install --production

          # License / Provision
          f5-rest-node /config/cloud/f5-cloud-libs/scripts/onboard.js \
              -o  /var/log/onboard.log \
              --no-reboot  \
              --log-level verbose \
              --host localhost \
              --user admin \
              --password admin \
              --port 443 \
              --hostname ${HOSTNAME} \
              --global-setting hostname:${HOSTNAME} \
              --set-root-password old:default,new:${BIGIP_ROOT_PASSWORD} \
              --ping www.f5.com 30 15 \

      - path: /config/cloud/onboard_config_vars
        permissions: 0755
        owner: root:root
        content: |
          #!/bin/bash

          HOSTNAME=sg-bigip.com
          BIGIP_ADMIN_USERNAME=admin
          BIGIP_ADMIN_PASSWORD=demo
          BIGIP_ROOT_PASSWORD=demo
          BIGIP_LICENSE_KEY=ZBVNS-ZSZRE-ISOTV-TSQIF-RYAOUQH

      runcmd:
        - /config/cloud/onboard.sh &


dsl_definitions:

  openstack_config: &openstack_config
    username: { get_secret: keystone_username }
    password: { get_secret: keystone_password }
    tenant_name: { get_secret: keystone_tenant_name }
    auth_url: { get_secret: keystone_url }
    region: { get_secret: region }

node_templates:

  f5_vnf:
    type: cloudify.openstack.nodes.Server
    properties:
      openstack_config: *openstack_config
      agent_config:
        install_method: none
      server:
        key_name: ''
        image: "BIGIP-13.0.0.2.0.1671"
        flavor: m1.xlarge
      management_network_name: { get_property: [ mgmt_network, resource_id ] }
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            args:
              config_drive: true
              userdata: {get_input: onboard_yaml}
    relationships:
    - type: cloudify.openstack.server_connected_to_port
      target: mgmt_port

######################################################################################
  mgmt_port:
    type: cloudify.openstack.nodes.Port
    properties:
      openstack_config: *openstack_config
    relationships:
    - type: cloudify.relationships.contained_in
      target: mgmt_network
    - type: cloudify.relationships.depends_on
      target: mgmt_subnet
    - type: cloudify.openstack.port_connected_to_security_group
      target: security_group
    - type: cloudify.openstack.port_connected_to_floating_ip
      target: floating_ip

  mgmt_subnet:
    type: cloudify.openstack.nodes.Subnet
    properties:
      openstack_config: *openstack_config
      use_external_resource: true
      resource_id: sg-outside-subnet
    relationships:
    - target: mgmt_network
      type: cloudify.relationships.contained_in

  mgmt_network:
    type: cloudify.openstack.nodes.Network
    properties:
      openstack_config: *openstack_config
      use_external_resource: true
      resource_id: sg-outside

  security_group:
    type: cloudify.openstack.nodes.SecurityGroup
    properties:
      openstack_config: *openstack_config
      security_group:
        name: fortinet_security_group
        description: generic security group
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          protocol: "TCP"
        - remote_ip_prefix: 0.0.0.0/0
          protocol: "UDP"
        - remote_ip_prefix: 0.0.0.0/0
          protocol: "ICMP"
          port_range_min: 0
          port_range_max: 0

  floating_ip:
    type: cloudify.openstack.nodes.FloatingIP
    properties:
      openstack_config: *openstack_config
      floatingip:
        floating_network_name: { get_secret: external_network_name }


outputs:

  f5_mgmt_ip:
    value: { get_attribute: [f5_vnf, floating_ip] }
